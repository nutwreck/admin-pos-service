// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/auth/data-user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Data User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get Data User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "login user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeLoginUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-token": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Refresh Token user by Header Bearer Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh Token User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "add by json user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Register User",
                "parameters": [
                    {
                        "description": "Add User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update User. If the user wants to change the password then it is mandatory to input the old and new passwords, If not then leave it blank.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeUpdateUserExample"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/constant/jenis-kelamin": {
            "get": {
                "description": "Get List Jenis Kelamin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Constant"
                ],
                "summary": "Get List Jenis Kelamin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/constant/role-user": {
            "get": {
                "description": "Get List Role User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Constant"
                ],
                "summary": "Get List Role User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/constant/status-pernikahan": {
            "get": {
                "description": "Get List Status Pernikahan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Constant"
                ],
                "summary": "Get List Status Pernikahan",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/jenis-perusahaan/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Jenis Perusahaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jenis Perusahaan"
                ],
                "summary": "Create Jenis Perusahaan",
                "parameters": [
                    {
                        "description": "Create Jenis Perusahaan",
                        "name": "jenisperusahaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeJenisPerusahaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/jenis-perusahaan/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Jenis Perusahaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jenis Perusahaan"
                ],
                "summary": "Get Delete Jenis Perusahaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Jenis Perusahaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/jenis-perusahaan/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Jenis Perusahaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jenis Perusahaan"
                ],
                "summary": "Get List Jenis Perusahaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/jenis-perusahaan/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Jenis Perusahaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Jenis Perusahaan"
                ],
                "summary": "Get Update Jenis Perusahaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Jenis Perusahaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Jenis Perusahaan",
                        "name": "jenisperusahaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeJenisPerusahaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/kategori-pekerjaan/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Kategori Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kategori Pekerjaan"
                ],
                "summary": "Create Kategori Pekerjaan",
                "parameters": [
                    {
                        "description": "Create Kategori Pekerjaan",
                        "name": "KategoriPekerjaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKategoriPekerjaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/kategori-pekerjaan/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Kategori Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kategori Pekerjaan"
                ],
                "summary": "Get Delete Kategori Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Kategori Pekerjaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/kategori-pekerjaan/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Kategori Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kategori Pekerjaan"
                ],
                "summary": "Get List Kategori Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/kategori-pekerjaan/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Kategori Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Kategori Pekerjaan"
                ],
                "summary": "Get Update Kategori Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Kategori Pekerjaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Kategori Pekerjaan",
                        "name": "KategoriPekerjaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKategoriPekerjaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/keahlian/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Keahlian",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Keahlian"
                ],
                "summary": "Create Keahlian",
                "parameters": [
                    {
                        "description": "Create Keahlian",
                        "name": "Keahlian",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKeahlianRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/keahlian/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Keahlian",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Keahlian"
                ],
                "summary": "Get Delete Keahlian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Keahlian",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/keahlian/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Keahlian",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Keahlian"
                ],
                "summary": "Get List Keahlian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/keahlian/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Keahlian",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Keahlian"
                ],
                "summary": "Get Update Keahlian",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Keahlian",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Keahlian",
                        "name": "Keahlian",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKeahlianRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/level-pekerjaan/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Level Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Level Pekerjaan"
                ],
                "summary": "Create Level Pekerjaan",
                "parameters": [
                    {
                        "description": "Create Level Pekerjaan",
                        "name": "LevelPekerjaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeLevelPekerjaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/level-pekerjaan/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Level Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Level Pekerjaan"
                ],
                "summary": "Get Delete Level Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Level Pekerjaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/level-pekerjaan/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Level Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Level Pekerjaan"
                ],
                "summary": "Get List Level Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/level-pekerjaan/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Level Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Level Pekerjaan"
                ],
                "summary": "Get Update Level Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Level Pekerjaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Level Pekerjaan",
                        "name": "LevelPekerjaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeLevelPekerjaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/pendidikan/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Pendidikan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pendidikan"
                ],
                "summary": "Create Pendidikan",
                "parameters": [
                    {
                        "description": "Create Pendidikan",
                        "name": "Pendidikan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemePendidikanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/pendidikan/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Pendidikan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pendidikan"
                ],
                "summary": "Get Delete Pendidikan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Pendidikan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/pendidikan/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Pendidikan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pendidikan"
                ],
                "summary": "Get List Pendidikan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/pendidikan/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Pendidikan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pendidikan"
                ],
                "summary": "Get Update Pendidikan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Pendidikan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Pendidikan",
                        "name": "Pendidikan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemePendidikanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tahun-pengalaman/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Tahun Pengalaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tahun Pengalaman"
                ],
                "summary": "Create Tahun Pengalaman",
                "parameters": [
                    {
                        "description": "Create Tahun Pengalaman",
                        "name": "TahunPengalaman",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeTahunPengalamanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tahun-pengalaman/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Tahun Pengalaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tahun Pengalaman"
                ],
                "summary": "Get Delete Tahun Pengalaman",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Tahun Pengalaman",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tahun-pengalaman/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Tahun Pengalaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tahun Pengalaman"
                ],
                "summary": "Get List Tahun Pengalaman",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tahun-pengalaman/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Tahun Pengalaman",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tahun Pengalaman"
                ],
                "summary": "Get Update Tahun Pengalaman",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Tahun Pengalaman",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Tahun Pengalaman",
                        "name": "TahunPengalaman",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeTahunPengalamanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tipe-pekerjaan/create": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create Tipe Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tipe Pekerjaan"
                ],
                "summary": "Create Tipe Pekerjaan",
                "parameters": [
                    {
                        "description": "Create Tipe Pekerjaan",
                        "name": "TipePekerjaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeTipePekerjaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tipe-pekerjaan/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Delete Tipe Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tipe Pekerjaan"
                ],
                "summary": "Get Delete Tipe Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Tipe Pekerjaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tipe-pekerjaan/results": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get List Tipe Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tipe Pekerjaan"
                ],
                "summary": "Get List Tipe Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : id, name, active, created_at, updated_at, default is created_at DESC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by ID",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/tipe-pekerjaan/update/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Update Tipe Pekerjaan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tipe Pekerjaan"
                ],
                "summary": "Get Update Tipe Pekerjaan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Tipe Pekerjaan",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Tipe Pekerjaan",
                        "name": "TipePekerjaan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeTipePekerjaanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kabupaten/create": {
            "post": {
                "description": "Create Data Kabupaten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Create Data Kabupaten",
                "parameters": [
                    {
                        "description": "Create Data Kabupaten",
                        "name": "Kabupaten",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKabupatenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kabupaten/delete/{code_kabupaten}": {
            "delete": {
                "description": "Get Delete Kabupaten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Delete Kabupaten",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Kabupaten",
                        "name": "code_kabupaten",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kabupaten/results": {
            "get": {
                "description": "Get List Kabupaten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get List Kabupaten",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : negara.code_negara, negara.name, provinsi.code_provinsi, provinsi.name, kabupaten.code_kabupaten, kabupaten.name, default is kabupaten.name ASC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search for data that matches the input from all columns",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Kabupaten",
                        "name": "code_kabupaten",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Kabupaten",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Provinsi",
                        "name": "parent_code_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Provinsi",
                        "name": "name_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Negara",
                        "name": "code_negara",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Negara",
                        "name": "name_negara",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kabupaten/update/{code_kabupaten}": {
            "put": {
                "description": "Get Update Kabupaten",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Update Kabupaten",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Kabupaten",
                        "name": "code_kabupaten",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Kabupaten",
                        "name": "kabupaten",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKabupatenRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kecamatan/create": {
            "post": {
                "description": "Create Data Kecamatan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Create Data Kecamatan",
                "parameters": [
                    {
                        "description": "Create Data Kecamatan",
                        "name": "Kecamatan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKecamatanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kecamatan/delete/{code_kecamatan}": {
            "delete": {
                "description": "Get Delete Kecamatan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Delete Kecamatan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Kecamatan",
                        "name": "code_kecamatan",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kecamatan/results": {
            "get": {
                "description": "Get List Kecamatan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get List Kecamatan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : negara.code_negara, negara.name, provinsi.code_provinsi, provinsi.name, kabupaten.code_kabupaten, kabupaten.name, kecamatan.code_kecamatan, kecamatan.name, default is kecamatan.name ASC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search for data that matches the input from all columns",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Kecamatan",
                        "name": "code_kecamatan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Kecamatan",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Kabupaten",
                        "name": "parent_code_kabupaten",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Kabupaten",
                        "name": "name_kabupaten",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Provinsi",
                        "name": "code_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Provinsi",
                        "name": "name_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Negara",
                        "name": "code_negara",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Negara",
                        "name": "name_negara",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kecamatan/update/{code_kecamatan}": {
            "put": {
                "description": "Get Update Kecamatan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Update Kecamatan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Kecamatan",
                        "name": "code_kecamatan",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Kecamatan",
                        "name": "Kecamatan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKecamatanRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kelurahan/create": {
            "post": {
                "description": "Create Data Kelurahan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Create Data Kelurahan",
                "parameters": [
                    {
                        "description": "Create Data Kelurahan",
                        "name": "Kelurahan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKelurahanRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kelurahan/delete/{code_kelurahan}": {
            "delete": {
                "description": "Get Delete Kelurahan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Delete Kelurahan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Kelurahan",
                        "name": "code_kelurahan",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kelurahan/results": {
            "get": {
                "description": "Get List Kelurahan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get List Kelurahan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : negara.code_negara, negara.name, provinsi.code_provinsi, provinsi.name, kabupaten.code_kabupaten, kabupaten.name, kecamatan.code_kecamatan, kecamatan.name, kelurahan.code_kelurahan, kelurahan.name, default is kelurahan.name ASC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search for data that matches the input from all columns",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Kelurahan",
                        "name": "code_kelurahan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Kelurahan",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Kecamatan",
                        "name": "parent_code_kecamatan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Kecamatan",
                        "name": "name_kecamatan",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Kabupaten",
                        "name": "code_kabupaten",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Kabupaten",
                        "name": "name_kabupaten",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Provinsi",
                        "name": "code_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Provinsi",
                        "name": "name_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Negara",
                        "name": "code_negara",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Negara",
                        "name": "name_negara",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/kelurahan/update/{code_kelurahan}": {
            "put": {
                "description": "Get Update Kelurahan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Update Kelurahan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Kelurahan",
                        "name": "code_kelurahan",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Kelurahan",
                        "name": "Kelurahan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeKelurahanRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/negara/create": {
            "post": {
                "description": "Create Data Negara",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Create Data Negara",
                "parameters": [
                    {
                        "description": "Create Data Negara",
                        "name": "negara",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeNegaraRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/negara/delete/{code_negara}": {
            "delete": {
                "description": "Get Delete Negara",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Delete Negara",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Negara",
                        "name": "code_negara",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/negara/results": {
            "get": {
                "description": "Get List Negara",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get List Negara",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by name using LIKE pattern",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/negara/update/{code_negara}": {
            "put": {
                "description": "Get Update Negara",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Update Negara",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Negara",
                        "name": "code_negara",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Negara",
                        "name": "negara",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeNegaraRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/provinsi/create": {
            "post": {
                "description": "Create Data Provinsi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Create Data Provinsi",
                "parameters": [
                    {
                        "description": "Create Data Provinsi",
                        "name": "Provinsi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeProvinsiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses201Example"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/provinsi/delete/{code_provinsi}": {
            "delete": {
                "description": "Get Delete Provinsi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Delete Provinsi",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delete Provinsi",
                        "name": "code_provinsi",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/provinsi/results": {
            "get": {
                "description": "Get List Provinsi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get List Provinsi",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Use ASC or DESC | Available column sort : negara.code_negara, negara.name, provinsi.code_provinsi, provinsi.name, default is provinsi.name ASC | If you don't want to use it, fill it blank",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination, default is 1 | if you want to disable pagination, fill it with the number 0",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page for pagination, default is 10 | if you want to disable pagination, fill it with the number 0",
                        "name": "perpage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search for data that matches the input from all columns",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Provinsi",
                        "name": "code_provinsi",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Provinsi",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Code Negara",
                        "name": "parent_code_negara",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name Negara",
                        "name": "name_negara",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponsesPagination"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        },
        "/api/v1/wilayah/provinsi/update/{code_provinsi}": {
            "put": {
                "description": "Get Update Provinsi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Wilayah"
                ],
                "summary": "Get Update Provinsi",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Update Provinsi",
                        "name": "code_provinsi",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Provinsi",
                        "name": "provinsi",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeProvinsiRequestUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses400Example"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses401Example"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses403Example"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses404Example"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses409Example"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/schemes.SchemeResponses500Example"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schemes.SchemeJenisPerusahaanRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 200,
                    "example": "jasa"
                }
            }
        },
        "schemes.SchemeKabupatenRequest": {
            "type": "object",
            "required": [
                "code_kabupaten",
                "name",
                "parent_code_provinsi"
            ],
            "properties": {
                "code_kabupaten": {
                    "type": "string",
                    "example": "00001"
                },
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "KAB. SEMARANG"
                },
                "parent_code_provinsi": {
                    "type": "string",
                    "example": "001"
                }
            }
        },
        "schemes.SchemeKabupatenRequestUpdate": {
            "type": "object",
            "required": [
                "name",
                "parent_code_provinsi"
            ],
            "properties": {
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "KAB. SEMARANG"
                },
                "parent_code_provinsi": {
                    "type": "string",
                    "example": "001"
                }
            }
        },
        "schemes.SchemeKategoriPekerjaanRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 200,
                    "example": "Media dan Komunikasi"
                }
            }
        },
        "schemes.SchemeKeahlianRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 200,
                    "example": "Excel"
                }
            }
        },
        "schemes.SchemeKecamatanRequest": {
            "type": "object",
            "required": [
                "code_kecamatan",
                "name",
                "parent_code_kabupaten"
            ],
            "properties": {
                "code_kecamatan": {
                    "type": "string",
                    "example": "000001"
                },
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "AMBARAWA"
                },
                "parent_code_kabupaten": {
                    "type": "string",
                    "example": "00001"
                }
            }
        },
        "schemes.SchemeKecamatanRequestUpdate": {
            "type": "object",
            "required": [
                "name",
                "parent_code_kabupaten"
            ],
            "properties": {
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "AMBARAWA"
                },
                "parent_code_kabupaten": {
                    "type": "string",
                    "example": "00001"
                }
            }
        },
        "schemes.SchemeKelurahanRequest": {
            "type": "object",
            "required": [
                "code_kelurahan",
                "name",
                "parent_code_kecamatan"
            ],
            "properties": {
                "code_kelurahan": {
                    "type": "string",
                    "example": "0000001"
                },
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "PANJANG"
                },
                "parent_code_kecamatan": {
                    "type": "string",
                    "example": "000001"
                }
            }
        },
        "schemes.SchemeKelurahanRequestUpdate": {
            "type": "object",
            "required": [
                "name",
                "parent_code_kecamatan"
            ],
            "properties": {
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "PANJANG"
                },
                "parent_code_kecamatan": {
                    "type": "string",
                    "example": "000001"
                }
            }
        },
        "schemes.SchemeLevelPekerjaanRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Staff"
                }
            }
        },
        "schemes.SchemeLoginUser": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "loker.superadmin@digy.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "12345678"
                }
            }
        },
        "schemes.SchemeNegaraRequest": {
            "type": "object",
            "required": [
                "code_negara",
                "name",
                "parent_code"
            ],
            "properties": {
                "code_negara": {
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "INDONESIA"
                },
                "parent_code": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "schemes.SchemeNegaraRequestUpdate": {
            "type": "object",
            "required": [
                "name",
                "parent_code"
            ],
            "properties": {
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "INDONESIA"
                },
                "parent_code": {
                    "type": "string",
                    "example": "0"
                }
            }
        },
        "schemes.SchemePendidikanRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 75,
                    "example": "SMA"
                }
            }
        },
        "schemes.SchemeProvinsiRequest": {
            "type": "object",
            "required": [
                "code_provinsi",
                "name",
                "parent_code_negara"
            ],
            "properties": {
                "code_provinsi": {
                    "type": "string",
                    "example": "001"
                },
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "JAWA TENGAH"
                },
                "parent_code_negara": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "schemes.SchemeProvinsiRequestUpdate": {
            "type": "object",
            "required": [
                "name",
                "parent_code_negara"
            ],
            "properties": {
                "name": {
                    "description": "Input with Uppercase",
                    "type": "string",
                    "example": "JAWA TENGAH"
                },
                "parent_code_negara": {
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "schemes.SchemeResponses": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status OK"
                }
            }
        },
        "schemes.SchemeResponses201Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 201
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Create Successfully"
                }
            }
        },
        "schemes.SchemeResponses400Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "schemes.SchemeResponses401Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 401
                },
                "message": {
                    "type": "string",
                    "example": "Authorization header is required"
                }
            }
        },
        "schemes.SchemeResponses403Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 403
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status forbidden"
                }
            }
        },
        "schemes.SchemeResponses404Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 404
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status not found"
                }
            }
        },
        "schemes.SchemeResponses409Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 409
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status conflict data"
                }
            }
        },
        "schemes.SchemeResponses500Example": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status internal error"
                }
            }
        },
        "schemes.SchemeResponsesPagination": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "data": {},
                "message": {
                    "type": "string",
                    "example": "status OK"
                },
                "page": {
                    "type": "integer",
                    "example": 1
                },
                "per_page": {
                    "type": "integer",
                    "example": 10
                },
                "total_data": {
                    "type": "integer",
                    "example": 50
                },
                "total_page": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "schemes.SchemeTahunPengalamanRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 100,
                    "example": "1-2 tahun"
                }
            }
        },
        "schemes.SchemeTipePekerjaanRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "maxLength": 100,
                    "example": "Freelance"
                }
            }
        },
        "schemes.SchemeUpdateUserExample": {
            "type": "object",
            "required": [
                "active",
                "first_name",
                "last_name",
                "role"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "first_name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "example": "super"
                },
                "last_name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "example": "admin"
                },
                "new_password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "12345679"
                },
                "old_password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "12345678"
                },
                "role": {
                    "description": "Input superadmin or admin with lowercase",
                    "type": "string",
                    "example": "superadmin"
                }
            }
        },
        "schemes.SchemeUserRequest": {
            "type": "object",
            "required": [
                "active",
                "email",
                "first_name",
                "last_name",
                "password",
                "role"
            ],
            "properties": {
                "active": {
                    "type": "boolean",
                    "example": true
                },
                "email": {
                    "description": "Email is Unique",
                    "type": "string",
                    "format": "email",
                    "example": "loker.superadmin@digy.com"
                },
                "first_name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "example": "super"
                },
                "last_name": {
                    "description": "Input with Lowercase",
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "12345678"
                },
                "role": {
                    "description": "Input superadmin or admin with lowercase",
                    "type": "string",
                    "example": "superadmin"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "User JWT Bearer - Format Input Value : Bearer[ space ][ JWTToken ]",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{"http", "https"},
	Title:            "Admin Loker API",
	Description:      "Dokumentasi untuk Service API Admin Loker",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
