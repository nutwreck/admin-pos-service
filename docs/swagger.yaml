definitions:
  schemes.LoginUser:
    properties:
      email:
        example: pos.root@digy.com
        format: email
        type: string
      password:
        example: "12345678"
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  schemes.MenuDetailFunctionRequest:
    properties:
      active:
        example: true
        type: boolean
      link:
        example: /add
        type: string
      menu_detail_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      menu_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      name:
        description: Input with Lowercase
        example: add produk
        maxLength: 200
        type: string
    required:
    - link
    - menu_detail_id
    - menu_id
    - name
    type: object
  schemes.MenuRequest:
    properties:
      active:
        example: true
        type: boolean
      name:
        description: Input with Lowercase
        example: master
        maxLength: 200
        type: string
    required:
    - name
    type: object
  schemes.OutletRequest:
    properties:
      active:
        example: true
        type: boolean
      address:
        example: jl. merdeka barat, ngaliyan, kota semarang
        maxLength: 1000
        type: string
      description:
        example: isi dengan catatan tentang outlet ini
        maxLength: 1000
        type: string
      merchant_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name:
        description: Input with Lowercase
        example: cabang 1 warung berkah
        type: string
      phone:
        example: "085768576857"
        minLength: 12
        type: string
    required:
    - address
    - merchant_id
    - name
    - phone
    type: object
  schemes.Responses:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: status OK
        type: string
    type: object
  schemes.Responses201Example:
    properties:
      code:
        example: 201
        type: integer
      data: {}
      message:
        example: Create Successfully
        type: string
    type: object
  schemes.Responses400Example:
    properties:
      code:
        example: 400
        type: integer
      data: {}
      message:
        example: status bad request
        type: string
    type: object
  schemes.Responses401Example:
    properties:
      code:
        example: 401
        type: integer
      message:
        example: Authorization header is required
        type: string
    type: object
  schemes.Responses403Example:
    properties:
      code:
        example: 403
        type: integer
      data: {}
      message:
        example: status forbidden
        type: string
    type: object
  schemes.Responses404Example:
    properties:
      code:
        example: 404
        type: integer
      data: {}
      message:
        example: status not found
        type: string
    type: object
  schemes.Responses409Example:
    properties:
      code:
        example: 409
        type: integer
      data: {}
      message:
        example: status conflict data
        type: string
    type: object
  schemes.Responses500Example:
    properties:
      code:
        example: 500
        type: integer
      data: {}
      message:
        example: status internal error
        type: string
    type: object
  schemes.ResponsesPagination:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: status OK
        type: string
      page:
        example: 1
        type: integer
      per_page:
        example: 10
        type: integer
      total_data:
        example: 50
        type: integer
      total_page:
        example: 5
        type: integer
    type: object
  schemes.RoleRequest:
    properties:
      active:
        example: true
        type: boolean
      name:
        description: Input with Lowercase
        example: root
        maxLength: 200
        type: string
      type:
        description: Input with Lowercase
        example: sys
        maxLength: 100
        type: string
    required:
    - name
    - type
    type: object
  schemes.UpdateUserExample:
    properties:
      active:
        example: true
        type: boolean
      name:
        description: Input with Lowercase
        example: root
        type: string
      new_password:
        example: "12345679"
        minLength: 8
        type: string
      old_password:
        example: "12345678"
        minLength: 8
        type: string
      role_id:
        example: ca7af74f-2fbf-4dd7-b9bd-eba0903170d0
        type: string
    required:
    - active
    - name
    - role_id
    type: object
  schemes.UserRequest:
    properties:
      active:
        example: true
        type: boolean
      email:
        description: Email is Unique
        example: pos.root@digy.com
        format: email
        type: string
      name:
        description: Input with Lowercase
        example: root
        type: string
      password:
        example: "12345678"
        minLength: 8
        type: string
      role_id:
        example: ca7af74f-2fbf-4dd7-b9bd-eba0903170d0
        type: string
    required:
    - active
    - email
    - name
    - password
    - role_id
    type: object
info:
  contact: {}
  description: Dokumentasi untuk Service API Admin POS
  title: Admin POS API
  version: "1.0"
paths:
  /api/v1/auth/data-user:
    get:
      consumes:
      - application/json
      description: Get Data User
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Data User
      tags:
      - User
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: Login User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemes.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      summary: Login User
      tags:
      - User
  /api/v1/auth/refresh-token:
    get:
      consumes:
      - application/json
      description: Refresh Token user by Header Bearer Token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Refresh Token User
      tags:
      - User
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: add by json user
      parameters:
      - description: Add User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schemes.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      summary: Register User
      tags:
      - User
  /api/v1/auth/update:
    put:
      consumes:
      - application/json
      description: Update User. If the user wants to change the password then it is
        mandatory to input the old and new passwords, If not then leave it blank.
      parameters:
      - description: Update User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/schemes.UpdateUserExample'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - User
  /api/v1/constant/type-role:
    get:
      consumes:
      - application/json
      description: Get List Type Role
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      summary: Get List Type Role
      tags:
      - Constant
  /api/v1/master/menu-detail-function/create:
    post:
      consumes:
      - application/json
      description: Create Master Menu Detail Function
      parameters:
      - description: Create Master Menu Detail Function
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/schemes.MenuDetailFunctionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemes.Responses201Example'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Create Master Menu Detail Function
      tags:
      - Master Menu Detail Function
  /api/v1/master/menu-detail-function/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Get Delete Master Menu Detail Function
      parameters:
      - description: Delete Master Menu Detail Function
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Delete Master Menu Detail Function
      tags:
      - Master Menu Detail Function
  /api/v1/master/menu-detail-function/results:
    get:
      consumes:
      - application/json
      description: Get List Master Menu Detail Function
      parameters:
      - description: 'Use ASC or DESC | Available column sort : menudetailfunction.id,
          menudetailfunction.name, menu.id, menu.name, menudetail.id, menudetail.name,
          menudetailfunction.active, default is menu.name ASC | If you don''t want
          to use it, fill it blank'
        in: query
        name: sort
        type: string
      - description: Page number for pagination, default is 1 | if you want to disable
          pagination, fill it with the number 0
        in: query
        name: page
        type: integer
      - description: Items per page for pagination, default is 10 | if you want to
          disable pagination, fill it with the number 0
        in: query
        name: perpage
        type: integer
      - description: Search by name using LIKE pattern
        in: query
        name: name
        type: string
      - description: Search by ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.ResponsesPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get List Master Menu Detail Function
      tags:
      - Master Menu Detail Function
  /api/v1/master/menu-detail-function/update/{id}:
    put:
      consumes:
      - application/json
      description: Get Update Master Menu Detail Function
      parameters:
      - description: Update Master Menu Detail Function
        in: path
        name: id
        required: true
        type: string
      - description: Update Master Menu Detail Function
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/schemes.MenuDetailFunctionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Update Master Menu Detail Function
      tags:
      - Master Menu Detail Function
  /api/v1/master/menu-detail/create:
    post:
      consumes:
      - multipart/form-data
      description: Create Master Menu Detail
      parameters:
      - description: Menu ID (UUID)
        in: formData
        name: menu_id
        required: true
        type: string
      - description: Name of the Menu Detail
        in: formData
        name: name
        required: true
        type: string
      - description: Link of the Menu Detail
        in: formData
        name: link
        required: true
        type: string
      - description: File to be uploaded | Max Size File 1MB
        in: formData
        name: image
        type: file
      - description: File to be uploaded | Max Size File 1MB
        in: formData
        name: icon
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemes.Responses201Example'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Create Master Menu Detail
      tags:
      - Master Menu Detail
  /api/v1/master/menu-detail/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Get Delete Master Menu Detail
      parameters:
      - description: Delete Master Menu Detail
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Delete Master Menu Detail
      tags:
      - Master Menu Detail
  /api/v1/master/menu-detail/results:
    get:
      consumes:
      - application/json
      description: Get List Master Menu Detail
      parameters:
      - description: 'Use ASC or DESC | Available column sort : menudetail.id, menudetail.menu_id,
          menu.name, menudetail.name, menudetail.link, menudetail.active, default
          is menu.name ASC | If you don''t want to use it, fill it blank'
        in: query
        name: sort
        type: string
      - description: Page number for pagination, default is 1 | if you want to disable
          pagination, fill it with the number 0
        in: query
        name: page
        type: integer
      - description: Items per page for pagination, default is 10 | if you want to
          disable pagination, fill it with the number 0
        in: query
        name: perpage
        type: integer
      - description: Search by name using LIKE pattern
        in: query
        name: name
        type: string
      - description: Search by ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.ResponsesPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get List Master Menu Detail
      tags:
      - Master Menu Detail
  /api/v1/master/menu-detail/update/{id}:
    put:
      consumes:
      - multipart/form-data
      description: Get Update Master Menu Detail
      parameters:
      - description: Update Master Menu Detail
        in: path
        name: id
        required: true
        type: string
      - description: Menu ID (UUID)
        in: formData
        name: menu_id
        required: true
        type: string
      - description: Name of the Menu Detail
        in: formData
        name: name
        required: true
        type: string
      - description: Link of the Menu Detail
        in: formData
        name: link
        required: true
        type: string
      - description: File to be uploaded | Max Size File 1MB
        in: formData
        name: image
        type: file
      - description: File to be uploaded | Max Size File 1MB
        in: formData
        name: icon
        type: file
      - description: Status Data
        in: formData
        name: active
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Update Master Menu Detail
      tags:
      - Master Menu Detail
  /api/v1/master/menu/create:
    post:
      consumes:
      - application/json
      description: Create Master Menu
      parameters:
      - description: Create Master Menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/schemes.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemes.Responses201Example'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Create Master Menu
      tags:
      - Master Menu
  /api/v1/master/menu/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Get Delete Master Menu
      parameters:
      - description: Delete Master Menu
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Delete Master Menu
      tags:
      - Master Menu
  /api/v1/master/menu/results:
    get:
      consumes:
      - application/json
      description: Get List Master Menu
      parameters:
      - description: 'Use ASC or DESC | Available column sort : id, name, active,
          created_at, updated_at, default is created_at DESC | If you don''t want
          to use it, fill it blank'
        in: query
        name: sort
        type: string
      - description: Page number for pagination, default is 1 | if you want to disable
          pagination, fill it with the number 0
        in: query
        name: page
        type: integer
      - description: Items per page for pagination, default is 10 | if you want to
          disable pagination, fill it with the number 0
        in: query
        name: perpage
        type: integer
      - description: Search by name using LIKE pattern
        in: query
        name: name
        type: string
      - description: Search by ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.ResponsesPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get List Master Menu
      tags:
      - Master Menu
  /api/v1/master/menu/update/{id}:
    put:
      consumes:
      - application/json
      description: Get Update Master Menu
      parameters:
      - description: Update Master Menu
        in: path
        name: id
        required: true
        type: string
      - description: Update Master Menu
        in: body
        name: menu
        required: true
        schema:
          $ref: '#/definitions/schemes.MenuRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Update Master Menu
      tags:
      - Master Menu
  /api/v1/master/merchant/create:
    post:
      consumes:
      - multipart/form-data
      description: Create Merchant
      parameters:
      - description: Name of the Merchant | input with lowecase
        in: formData
        name: name
        required: true
        type: string
      - description: Phone of the Merchant | input numeric
        in: formData
        name: phone
        required: true
        type: string
      - description: Address of the Merchant
        in: formData
        name: address
        type: string
      - description: Description of the Merchant
        in: formData
        name: description
        type: string
      - description: File to be uploaded | Max Size File 1MB
        in: formData
        name: logo
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemes.Responses201Example'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Create Merchant
      tags:
      - Merchant
  /api/v1/master/merchant/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Get Delete Merchant
      parameters:
      - description: Delete Merchant
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Delete Merchant
      tags:
      - Merchant
  /api/v1/master/merchant/results:
    get:
      consumes:
      - application/json
      description: Get List Merchant
      parameters:
      - description: 'Use ASC or DESC | Available column sort : merchant.id, merchant.name,
          merchant.active, merchant.created_at, default is merchant.name ASC | If
          you don''t want to use it, fill it blank'
        in: query
        name: sort
        type: string
      - description: Page number for pagination, default is 1 | if you want to disable
          pagination, fill it with the number 0
        in: query
        name: page
        type: integer
      - description: Items per page for pagination, default is 10 | if you want to
          disable pagination, fill it with the number 0
        in: query
        name: perpage
        type: integer
      - description: Search by name using LIKE pattern
        in: query
        name: name
        type: string
      - description: Search by ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.ResponsesPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get List Merchant
      tags:
      - Merchant
  /api/v1/master/merchant/update/{id}:
    put:
      consumes:
      - multipart/form-data
      description: Get Update Merchant
      parameters:
      - description: Update Merchant
        in: path
        name: id
        required: true
        type: string
      - description: Name of the Merchant | input with lowecase
        in: formData
        name: name
        required: true
        type: string
      - description: Phone of the Merchant | input numeric
        in: formData
        name: phone
        required: true
        type: string
      - description: Address of the Merchant
        in: formData
        name: address
        required: true
        type: string
      - description: Description of the Merchant
        in: formData
        name: description
        required: true
        type: string
      - description: File to be uploaded | Max Size File 1MB
        in: formData
        name: logo
        type: file
      - description: Status Data
        in: formData
        name: active
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Update Merchant
      tags:
      - Merchant
  /api/v1/master/outlet/create:
    post:
      consumes:
      - application/json
      description: Create Outlet
      parameters:
      - description: Create Outlet
        in: body
        name: outlet
        required: true
        schema:
          $ref: '#/definitions/schemes.OutletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemes.Responses201Example'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Create Outlet
      tags:
      - Outlet
  /api/v1/master/outlet/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Get Delete Outlet
      parameters:
      - description: Delete Outlet
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Delete Outlet
      tags:
      - Outlet
  /api/v1/master/outlet/results:
    get:
      consumes:
      - application/json
      description: Get List Outlet
      parameters:
      - description: 'Use ASC or DESC | Available column sort : outlet.id, outlet.name,
          outlet.phone, outlet.created_at, outlet.active, merchant.id, merchant.name,
          default is merchant.name ASC | If you don''t want to use it, fill it blank'
        in: query
        name: sort
        type: string
      - description: Page number for pagination, default is 1 | if you want to disable
          pagination, fill it with the number 0
        in: query
        name: page
        type: integer
      - description: Items per page for pagination, default is 10 | if you want to
          disable pagination, fill it with the number 0
        in: query
        name: perpage
        type: integer
      - description: Search by name using LIKE pattern
        in: query
        name: name
        type: string
      - description: Search by ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.ResponsesPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get List Outlet
      tags:
      - Outlet
  /api/v1/master/outlet/update/{id}:
    put:
      consumes:
      - application/json
      description: Get Update Outlet
      parameters:
      - description: Update Outlet
        in: path
        name: id
        required: true
        type: string
      - description: Update Outlet
        in: body
        name: outlet
        required: true
        schema:
          $ref: '#/definitions/schemes.OutletRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Update Outlet
      tags:
      - Outlet
  /api/v1/master/role/create:
    post:
      consumes:
      - application/json
      description: Create Master Role
      parameters:
      - description: Create Master Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schemes.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "201":
          description: Created
          schema:
            $ref: '#/definitions/schemes.Responses201Example'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Create Master Role
      tags:
      - Master Role
  /api/v1/master/role/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Get Delete Master Role
      parameters:
      - description: Delete Master Role
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Delete Master Role
      tags:
      - Master Role
  /api/v1/master/role/results:
    get:
      consumes:
      - application/json
      description: Get List Master Role
      parameters:
      - description: 'Use ASC or DESC | Available column sort : id, name, active,
          created_at, updated_at, default is created_at DESC | If you don''t want
          to use it, fill it blank'
        in: query
        name: sort
        type: string
      - description: Page number for pagination, default is 1 | if you want to disable
          pagination, fill it with the number 0
        in: query
        name: page
        type: integer
      - description: Items per page for pagination, default is 10 | if you want to
          disable pagination, fill it with the number 0
        in: query
        name: perpage
        type: integer
      - description: Search by type role
        in: query
        name: type
        type: string
      - description: Search by name using LIKE pattern
        in: query
        name: name
        type: string
      - description: Search by ID
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.ResponsesPagination'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      summary: Get List Master Role
      tags:
      - Master Role
  /api/v1/master/role/update/{id}:
    put:
      consumes:
      - application/json
      description: Get Update Master Role
      parameters:
      - description: Update Master Role
        in: path
        name: id
        required: true
        type: string
      - description: Update Master Role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/schemes.RoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schemes.Responses'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schemes.Responses400Example'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/schemes.Responses401Example'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/schemes.Responses403Example'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/schemes.Responses404Example'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/schemes.Responses409Example'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/schemes.Responses500Example'
      security:
      - ApiKeyAuth: []
      summary: Get Update Master Role
      tags:
      - Master Role
securityDefinitions:
  ApiKeyAuth:
    description: 'User JWT Bearer - Format Input Value : Bearer[ space ][ JWTToken
      ]'
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
